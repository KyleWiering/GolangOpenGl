on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, closed ]


#https://docs.github.com/en/actions/learn-github-actions/environment-variables
#echo 2: ${GITHUB_REF_NAME} # github pseudo 'merge' branch
#echo 3: ${GITHUB_BASE_REF} # github target branch (main)
#echo 4: ${GITHUB_HEAD_REF} # github source branch (feature)

jobs:
  checkvars:
    name: Check Env Vars
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Print Envvar
        env:
          GOPATH: ${{ runner.workspace }}
          GOPRIVATE: github.com/software-advice/*
        run: | 
          echo 1: ${GITHUB_REF_NAME}
          echo 2: ${GITHUB_BASE_REF}
          echo 3: ${GITHUB_HEAD_REF}
          echo 5: ${{toJSON(github.event.pull_request)}}
      
      - name: Get Git Details
        id: git_info
        run: |
          if [[ ${GITHUB_REF_NAME} == ${GITHUB_BASE_REF} ]]; then
            if [[ "${{ github.event.pull_request.merged }}" != true ]]; then
              echo "This was a closed PR, I think"
              exit 0
            fi
            echo "::set-output name=branch::$(echo ${GITHUB_REF_NAME} | tr / -)"
            echo "::set-output name=sha::${{github.sha}}"
            echo "::set-output name=base_sha::${{github.event.before}}"
            echo "Main Branch: $(echo ${GITHUB_REF_NAME} | tr / -)"
            TAG=${{github.sha}}
          else
            echo "::set-output name=branch::$(echo ${GITHUB_HEAD_REF}  | tr / -)"
            echo "::set-output name=sha::${{github.event.pull_request.head.sha}}"
            echo "::set-output name=base_sha::${{github.event.pull_request.base.sha}}"
            echo "Feature Branch: $(echo ${GITHUB_REF_NAME} | tr / -)"
            TAG="${{github.event.pull_request.head.sha}}.beta.$(echo ${GITHUB_HEAD_REF}  | tr / -)"
          fi
          echo "::set-output name=new_tag::${TAG}"
          echo ${TAG}
          
